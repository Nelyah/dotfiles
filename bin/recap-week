#! /bin/bash

get_project_regular_tasks_uuid () {
    task status:completed end.after:'today-1week' -main 'proj ==' "$1" export | jq -r '.[].uuid'
}

get_done_project_main_tasks_uuid () {
    task status:completed end.after:'today-1week' +main 'proj ==' "$1" export | jq -r '.[].uuid'
}

get_progress_project_main_tasks_uuid () {
    task status:pending -backlog +main 'proj ==' "$1" export | jq -r '.[].uuid'
}

sed_gitlab () {
    sed -r 's,^( *- )(.*git\..*/)([^/]*),\1[!\3](\2\3),' -
}

sed_jira () {
    sed -r 's,^( *- )(.*jira\..*/)([^/]*),\1[\3](\2\3),' -
}

format_main_task () {
    task_uuid="$1"
    task_status="$2"

    echo "- [$task_status] $(task _get "$task_uuid".description)"
    task "$task_uuid" export | jq -r '.[]
                                      | select(.annotations != null)
                                      | "    - " + .annotations[].description' | \
        sed_gitlab | \
        sed_jira
}

format_regular_task () {
    task_uuid="$1"

    echo "    - $(task "$task_uuid" export | jq -r '.[].description' )"
    task "$task_uuid" export | jq -r '.[]
                                      | select(.annotations != null)
                                      | "        - " + .annotations[].description' | \
        sed_gitlab | \
        sed_jira
}

print_done_projects () {
    for proj in "${done_projects[@]}"; do
        for uuid in $(get_done_project_main_tasks_uuid "$proj"); do
            format_main_task "$uuid" "done"
        done
        for uuid in $(get_project_regular_tasks_uuid "$proj"); do
            format_regular_task "$uuid"
        done
        echo ""
    done
}

print_progress_projects () {
    for proj in "${progress_projects[@]}"; do
        for uuid in $(get_progress_project_main_tasks_uuid "$proj"); do
            format_main_task "$uuid" "progress"
        done
        for uuid in $(get_project_regular_tasks_uuid "$proj"); do
            format_regular_task "$uuid"
        done
        echo ""
    done
}

check_requirements () {
    if ! hash task &> /dev/null; then
        echo "Error: You must install taskwarrior ('task')" >&2
        exit 1
    fi

    if ! hash jq &> /dev/null; then
        echo "Error: You must install 'jq'" >&2
        exit 1
    fi
}

main () {
    check_requirements

    progress_projects=()
    all_projects=( $(task status:completed end.after:'today-1week' export | \
        jq -r '.[] | select(.project != null)
                   | .project' | \
        sort -u) )
    done_projects=( $(task status:completed end.after:'today-1week' +main export | \
        jq -r '.[] | select(.project != null)
                   | .project' | \
        sort -u)
    )

    for proj in "${all_projects[@]}"; do
        ! grep -q "\b${proj}\b" <<< "${done_projects[@]}" && progress_projects+=( "$proj" )
    done

    print_done_projects
    print_progress_projects
}

main
